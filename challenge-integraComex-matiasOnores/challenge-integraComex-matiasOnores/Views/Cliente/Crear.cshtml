@model challenge_integraComex_matiasOnores.Models.Cliente

@using (Html.BeginForm("Create", "Cliente", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col align-content-center">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.CUIT, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 input-group">
                            @Html.EditorFor(model => model.CUIT, new { htmlAttributes = new { @class = "form-control", id = "txtCuit" } })
                            <button class="btn btn-outline-secondary" type="button" id="btnCuit">Consultar</button>
                        </div>
                            @Html.ValidationMessageFor(model => model.CUIT, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RazonSocial, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control", id = "txtRazonSocial", disabled="disabled", @readonly= "readonly" } })
                            @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" , id = "txtTelefono" } })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Activo)
                                @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear" class="btn btn-outline-success" />
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}

<script>

    $(document).ready(function () {
        $('#btnCuit').click(function () {
            var valorCuit = $('#txtCuit').val();

            $.ajax({
                url: '/Cliente/GetNombreByCuitAsync',
                method: 'POST',
                data: { cuit: valorCuit },
                success: function (response) {
                    $('#txtRazonSocial').val(response);

                },
                error: function (xhr, status, error) {
                    console.error('Hubo un error en la solicitud:', error);
                }
            });
        });
    });
</script>