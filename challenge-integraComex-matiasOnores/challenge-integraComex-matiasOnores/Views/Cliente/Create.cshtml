@model challenge_integraComex_matiasOnores.Models.Cliente

@{
    ViewBag.Title = "Create";
}
<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CUIT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                @Html.EditorFor(model => model.CUIT, new { htmlAttributes = new { @class = "form-control", id = "txtCuit" } })
                <button class="btn btn-outline-secondary" type="button" id="btnCuit"><i class="bi bi-bootstrap-reboot"></i></button>
                @Html.ValidationMessageFor(model => model.CUIT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RazonSocial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled", id = "txtRazonSocial" } })*@
                @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control", id = "txtRazonSocial" } })
                @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Activo)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>

    $(document).ready(function () {
        $('#btnCuit').click(function () {
            // Capturar el valor del campo txtCuit
            var valorCuit = $('#txtCuit').val();

            // Realizar la solicitud AJAX POST
            $.ajax({
                url: '/Cliente/GetNombreByCuitAsync', // URL del método en tu controlador
                method: 'POST',
                data: { cuit: valorCuit }, // Datos que enviarás al método
                success: function (response) {
                    // Manejar la respuesta del servidor
                    //$('#txtRazonSocial').val(response.Nombre);
                    $('#txtRazonSocial').val(response);
                    
                },
                error: function (xhr, status, error) {
                    // Manejar errores
                    console.error('Hubo un error en la solicitud:', error);
                }
            });
        });
    });
</script>
}
